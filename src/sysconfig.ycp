/*
 *
 * Module:             rc_config.ycp
 *
 * Author:             rc_config (mike@suse.de)
 *
 * Submodules:
 *
 *
 * Purpose:
 *
 * Modify:
 *
 *
 * $Id$
 */

{

  import "Mode";
  Mode::normal = true;	// system is already installed

  textdomain "rc_config";
  global boolean firewall_mode   = false;

  integer arg_n = size(Args()) - 1;

  while (arg_n >= 0)
  {
      if (Args(arg_n) == ".firewall")
      {
	  firewall_mode = true;
      }
     arg_n = arg_n - 1;
  }

  y2milestone( "STARTING rc-config editor ... %1", firewall_mode);

  // definition of map user_settings  
  map user_settings = $[];
  
  //  set "rc_config_status" `off
  user_settings = add(user_settings, "rc_config_status", `off);
   
    UI(``{
	   global define ImageOpenDialog()
	      ``{
  	         // The main dialog. Copied from installation.ycp.
		 OpenDialog(`opt(`defaultsize),
			    `VBox(`Left(
					//`Image(`suseheader, "SuSE")),	
					`Image(`suseheader, "SuSE")),
                                        `HSpacing(85), 
					`HWeight(70, `VBox(
							   `Left(`Heading(`id(`title), _("YaST2\nLoad rc.config database ..."))),
							   `HVCenter(`ReplacePoint(`id(`contents),
										   `VBox(
											 `VSpacing(4),
											 `HBox(
											       `HSpacing(10),
											       `Top(`ProgressBar(`id(`package), " ", 100)),
											       `HSpacing(12)
											       )
											 )
										   )),
							   `HBox(
								 // back pushbutton: the user input is ignored and the last dialog is called
								 `PushButton(`id(`back), `opt(`disabled), _("&Back")),
								 `HStretch(),
								 `PushButton(`id(`help), `opt(`disabled), _("&Help")),
								 `HStretch(),
								 `PushButton(`id(`search),`opt(`disabled), _("&Search")),
								 `HStretch(),
								 // next pushbutton: finish the configuration
								 `PushButton(`id(`next), `opt(`disabled), _("&Finish"))
								 )
							   )
						 )
					
				  )
			    );
	   };

       
     
    global define SetContents(string title, term contents, string helptext,
		       boolean has_back, boolean has_next) ``{
      ChangeWidget(`id(`next),   `Enabled, has_next);
      ChangeWidget(`id(`back),   `Enabled, has_back);
      ChangeWidget(`id(`search), `Enabled, true);
      ChangeWidget(`id(`help),   `Enabled, true);
      ChangeWidget(`id(`title),  `Value, title);
      ReplaceWidget(`id(`contents), contents);
    };


	// This is a popup dialog for displaying (usually) error messages      
    global define DisplayMessage(string message) ``{
	    // ok pushbutton: confirm the dialog
	OpenDialog(
	    `opt(`decorated),
	    `HBox(
		`HSpacing(1),
		`VBox(
		    `VSpacing(0.2),
		    `Label(message),
			// "OK" button: User confirmation
		    `PushButton(`opt(`default), _("&OK")),
		    `VSpacing(0.2)
		    ),
		`HSpacing(1)
		)
	    );
	UserInput();
	CloseDialog();
    };

    
    global define DisplayMessage2(string message, integer code, string stack) ``{
      // ok pushbutton: confirm the dialog
      term t = `VBox();
      t = add(t, `Left(`Label(message)));
      if (code != 0)
	// optional warning dialog text
	t = add(t, `Left(`Label(sformat(_("Error code %1"), code))));
      if (stack != "") 
	t = add(t, `Left(`Label(stack)));
	  // "OK" button: User confirmation
      OpenDialog(`opt(`decorated), add(t, `PushButton(_("&OK"))));
      UserInput();
      CloseDialog();
    }; 

	// This is a popup dialog with Yes/No question
    global define DisplayYesNo(string message, boolean d) ``{
	
	term t = `VBox();
	t = add(t, `Left(`Label(message)));
	term b = `HBox();
	if (d) {
		// "Yes" button: Answer to the dialog question
	    b = add (b, `PushButton(`id(`yes), `opt (`default), _("&Yes")));
		// "No" button: Answer to the dialog question
	    b = add (b, `PushButton(`id(`no), _("&No")));
	}
	else {
		// "No" button: Answer to the dialog question
	    b = add (b, `PushButton(`id(`no), `opt (`default), _("&No")));
		// "Yes" button: Answer to the dialog question
	    b = add (b, `PushButton(`id(`yes), _("&Yes")));
	}
	
	OpenDialog(`opt(`decorated), add(t, b));
	any ui = UserInput();
	CloseDialog();
	
	return (ui == `yes);
	
    };

    global define YesOrNo(any message, string yes_button_message, string no_button_message) ``{
      OpenDialog(`opt(`decorated),
	`HBox(`HSpacing(1),
	      `VBox(`VSpacing(0.2),
		    `Label(message),
		    `HBox(`PushButton(`id(`yes), `opt(`default), yes_button_message),
			  `HSpacing(2),
			  `PushButton( no_button_message )),
		    `VSpacing(0.2)),
	      `HSpacing(1)
	));
      any ret = UserInput();
      CloseDialog();
      return (ret == `yes);
    };
  });


  UI(`ImageOpenDialog());

  y2debug( "Initializing ...");
  // message on top of the progress bar
  UI(`ChangeWidget(`id(`package),   `Label, _("Reading /etc/rc.config and additional describing data ...")));
  UI(`ChangeWidget(`id(`package),   `Value, 10));
 
  arg_n = size(Args()) - 1;
  boolean test_mode = false;
  
  while (arg_n >= 0) {
      if (Args(arg_n) == .test) {
	  test_mode = true;
      }            
      arg_n = arg_n - 1;
  }

  user_settings = add( user_settings, "test_mode", test_mode );
  
  /*
   * Main dialog cycle
   *
   */

  list dialog = [
                ``(CallFunction (`sysconfig_step1() ))
  ];

  integer id = 0;
  any result = `next;

  while ((id >= 0) && (id < size (dialog))) {
    
    result = eval(select(dialog, id, nil));
    
    if (result == `cancel)
      break;
    else if (result == `next)
      id = id + 1;
    else if (result == `back)
      id = id - 1;
    else if ( result == `finish )
	break;

  }
  
  return UI(`CloseDialog());

}
